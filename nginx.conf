load_module /usr/lib/nginx/modules/ngx_http_geoip2_module.so;

events {}

http {
    # Define GeoIP2 database and fields to be extracted
    geoip2 /etc/nginx/GeoLite2-ASN.mmdb {
        auto_reload 5m;
        $geoip2_data_country_code country iso_code;
    }

    # Enable recursive lookups for GeoIP2 using forwarded IPs
    geoip2_proxy_recursive on;
    geoip2_proxy 0.0.0.0/0;

    # Map the client IP to the appropriate GeoIP2 lookup variable
    map $http_x_forwarded_for $real_ip {
        default $http_x_forwarded_for;
        '' $remote_addr;
    }

    add_header X-Country-Code "$geoip2_data_country_code" always;
    add_header X-Real-IP-Used "$real_ip" always;

    # Define upstream servers
    upstream uk {
        server uk:80;
    }

    upstream us {
        server us1:80;
        server us2:80;
    }

    upstream rest {
        server rest:80;
    }

    upstream backup {
        server backup:80;
    }

    # Map the GeoIP2 country code to the backend
    map $geoip2_data_country_code $backend {
        default rest;
        GB uk;
        US us;
    }

    server {
        listen 80;

        location / {
            add_header X-Debug-Country "$geoip2_data_country_code";
            add_header X-Debug-Backend "$backend";

            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $real_ip;
            proxy_set_header X-Forwarded-For $real_ip;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Error handling and fallback to backup
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_connect_timeout 1s;
            proxy_read_timeout 2s;
            proxy_send_timeout 2s;
        }

        error_page 502 = @backup;

        location @backup {
            proxy_pass http://backup;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
